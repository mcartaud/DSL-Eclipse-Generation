[comment encoding = UTF-8 

Copyright (c) 2012 Obeo
All rights reserved.  This program and the accompanying materials
are made available under the terms of the Eclipse Public License 1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

You can apply any license to the files generated with this module and Acceleo.

Contributors :
	Mathieu Cartaud (Obeo) - initial API and implementation
/]
[module extensionImplementationJavaFile('http://www.obeonetwork.org/dsl/eclipse')]

[import org::obeonetwork::dsl::gen::eclipse::common::normalizeName /]


[template private extensionImplementationjavaFile(anExtensionPoint : ExtensionPointProvider)]
[anExtensionPoint.eContainer(Bundle).genBundleJavaPath()/]/registry/[anExtensionPoint.genExtensionName().toLowerFirst()/]/impl/[anExtensionPoint.genExtensionName()/]Extension.java
[/template]

[template public genExtensionImplementationJavaFile(anExtensionPoint : ExtensionPointProvider)]
[file (anExtensionPoint.extensionImplementationjavaFile(), false, 'UTF-8')]
package [anExtensionPoint.ancestors(Bundle).genBundleID()/].registry.[anExtensionPoint.genExtensionName().toLowerFirst()/].impl;

import [anExtensionPoint.ancestors(Bundle).genBundleID()/].registry.[anExtensionPoint.genExtensionName().toLowerFirst()/].[anExtensionPoint.genExtensionName()/]ExtensionDescriptor;
import [anExtensionPoint.ancestors(Bundle).genBundleID()/].registry.[anExtensionPoint.genExtensionName().toLowerFirst()/].[anExtensionPoint.genExtensionName()/]ExtensionRegistry;

//[protected (': add imports for ' + anExtensionPoint.refactorExtensionClassName() + 'Extension')]
//[/protected]

/**
 * implementation class for [anExtensionPoint.name/] 
 * @generated
 */
public class [anExtensionPoint.genExtensionName()/]Extension {

//[protected (': add attributes for ' + anExtensionPoint.refactorExtensionClassName() + 'Extension')]
//[/protected]

	/**
	 * @generated
	 */
	public void sayHi() {
		System.out.println("Hello World!");
		for ([anExtensionPoint.genExtensionName()/]ExtensionDescriptor extension : [anExtensionPoint.genExtensionName()/]ExtensionRegistry.getRegisteredExtensions()) {
			System.out.println("Hello " + extension.get[anExtensionPoint.refactorExtensionClassName()/]Extension().getName());
[for (anAttribute : JavaAttribute | anExtensionPoint.javaAttributes)]
			System.out.println("Hello " + extension.get[anAttribute.genAttributeClassName()/]Extension().getName());			
[/for]				
		}
	}

//[protected (': add methods for ' + anExtensionPoint.refactorExtensionClassName() + 'Extension')]
//[/protected]

}
[/file]
[/template]