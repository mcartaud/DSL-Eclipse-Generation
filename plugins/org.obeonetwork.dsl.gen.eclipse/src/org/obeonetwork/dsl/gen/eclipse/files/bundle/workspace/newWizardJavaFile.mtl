[comment encoding = UTF-8 /]
[module newWizardJavaFile('http://www.obeonetwork.org/dsl/eclipse')]

[import org::obeonetwork::dsl::gen::eclipse::common::path /]

[template private newWizardJavaFile(aWizard : Wizard)]
[aWizard.eContainer(Bundle).genBundlePath()/]/wizards/[aWizard.wizardID.toUpperFirst()/].java
[/template]

[template public gennewWizardJavaFile(aWizard : Wizard)]
[file (newWizardJavaFile(), false, 'UTF-8')]
package [aWizard.ancestors(Bundle).projectID/].wizards;

import java.lang.reflect.InvocationTargetException;

import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.jface.operation.IRunnableWithProgress;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.wizard.Wizard;
import org.eclipse.ui.INewWizard;
import org.eclipse.ui.IWorkbench;
import org.eclipse.ui.PlatformUI;
[for (aNature : Nature | aWizard.ancestors(Bundle).natures)]
import [aWizard.ancestors(Bundle).projectID/].nature.[aNature.natureID.toUpperFirst()/];
[/for]

public class [aWizard.wizardID.toUpperFirst()/] extends Wizard implements INewWizard{

	private [aWizard.wizardID.toUpperFirst()/] [aWizard.wizardID.toLowerFirst()/];
	
	public [aWizard.wizardID.toUpperFirst()/]() {
		super();		
		setNeedsProgressMonitor(true);
		setWindowTitle("[aWizard.name/]");
	}
	
	@Override
	public void addPages() {
		[aWizard.wizardID.toLowerFirst()/] = new [aWizard.wizardID.toUpperFirst()/]();
		addPage([aWizard.wizardID.toLowerFirst()/]);
	}

	@Override
	public boolean performFinish() {
		String projectName = [aWizard.wizardID.toLowerFirst()/].getProjectName();
		final IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName);
		if (!project.exists()) {
			IRunnableWithProgress runnable = new IRunnableWithProgress() {
				@Override
				public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
					try {
						[for (aNature : Nature | aWizard.ancestors(Bundle).natures)]
						[aNature.natureID.toUpperFirst()/] [aNature.natureID.toLowerFirst()/] = new [aNature.natureID.toUpperFirst()/](project);
						[aNature.natureID.toLowerFirst()/].configure();[/for]
						
						project.create(monitor);
						project.open(monitor);
					} catch (CoreException e) {
						e.printStackTrace();
					}					
				}
			};
			try {
				PlatformUI.getWorkbench().getProgressService().run(false, false, runnable);
			} catch (InvocationTargetException | InterruptedException e) {
				e.printStackTrace();
			}
		}
		return true;
	}

	@Override
	public void init(IWorkbench arg0, IStructuredSelection arg1) {
		// TODO Auto-generated method stub	
	}

}
[/file]
[/template]