[comment encoding = UTF-8 /]
[module wizardNewProjectJavaFile('http://www.obeonetwork.org/dsl/eclipse')]


[template private wizardNewProjectFile(aBundle : Bundle)]
[aBundle.eContainer(Application).name/]/plugins/[aBundle.projectID/]/src/[aBundle.projectID/]/wizards/[aBundle.wizards.wizardID/].java
[/template]

[template public genWizardNewProjectFile(aBundle : Bundle)]
[file (wizardNewProjectFile(), false, 'UTF-8')]
package [aBundle.projectID/].wizards;

import java.lang.reflect.InvocationTargetException;

import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;
import org.eclipse.core.runtime.IProgressMonitor;
import org.eclipse.jface.operation.IRunnableWithProgress;
import org.eclipse.jface.viewers.IStructuredSelection;
import org.eclipse.jface.wizard.Wizard;
import org.eclipse.ui.INewWizard;
import org.eclipse.ui.IWorkbench;
import org.eclipse.ui.PlatformUI;
[if (aBundle.natures->size() > 0)]
import [aBundle.projectID/].nature.[aBundle.natures.natureID/][/if]

public class [aBundle.wizards.wizardID/] extends Wizard implements INewWizard{

	private [aBundle.wizards.wizardID.toUpperFirst()/] [aBundle.wizards.wizardID.toLowerFirst()/];
	
	public MyWizard() {
		super();		
		setNeedsProgressMonitor(true);
		setWindowTitle("[aBundle.wizards.name/]");
	}
	
	@Override
	public void addPages() {
		[aBundle.wizards.wizardID.toLowerFirst()/] = new [aBundle.wizards.wizardID.toUpperFirst()/];
		addPage([aBundle.wizards.wizardID.toLowerFirst()/]);
	}

	@Override
	public boolean performFinish() {
		String projectName = [aBundle.wizards.wizardID.toLowerFirst()/].getProjectName();
		final IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName);
		if (!project.exists()) {
			IRunnableWithProgress runnable = new IRunnableWithProgress() {
				@Override
				public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException {
					try {

						[if (aBundle.natures->size() > 0)]
						[aBundle.natures.name.toUpperFirst()/]Nature [aBundle.natures.name.toLowerFirst()/]Nature = new [aBundle.natures.name.toUpperFirst()/]Nature(project);
						[aBundle.natures.name.toLowerFirst()/]Nature.configure();[/if]
						project.create(monitor);
						project.open(monitor);
					} catch (CoreException e) {
						e.printStackTrace();
					}					
				}
			};
			try {
				PlatformUI.getWorkbench().getProgressService().run(false, false, runnable);
			} catch (InvocationTargetException | InterruptedException e) {
				e.printStackTrace();
			}
		}
		return true;
	}

	@Override
	public void init(IWorkbench arg0, IStructuredSelection arg1) {
		// TODO Auto-generated method stub	
	}

}
[/file]
[/template]