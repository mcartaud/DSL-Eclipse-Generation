[comment encoding = UTF-8 

Copyright (c) 2012 Obeo
All rights reserved.  This program and the accompanying materials
are made available under the terms of the Eclipse Public License 1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html

You can apply any license to the files generated with this module and Acceleo.

Contributors :
	Mathieu Cartaud (Obeo) - initial API and implementation
/]
[module manifestMFFile('http://www.obeonetwork.org/dsl/eclipse', 'http://www.eclipse.org/emf/2002/Ecore', 'http://www.eclipse.org/emf/2002/GenModel')]

[import org::obeonetwork::dsl::gen::eclipse::common::normalizeName /]

[template private manifestMFFile(aBundle : Bundle)]
[aBundle.genBundlePath()/]/META-INF/MANIFEST.MF
[/template]

[template public genManifestMFFile(aBundle : Bundle)]
[file (aBundle.manifestMFFile(), false, 'UTF-8')]
Manifest-Version: 1.0
Bundle-ManifestVersion: 2
Bundle-RequiredExecutionEnvironment: [if (aBundle.requiredEnvironment->size() > 0)][aBundle.requiredEnvironment/][else]J2SE-1.5[/if]
Bundle-Name: %Bundle-Name
Bundle-SymbolicName: [aBundle.genBundleID()/];singleton:=true
Bundle-Version: [aBundle.bundleVersion()/]
Bundle-Vendor: %Provider-Name
Bundle-ClassPath: .
Bundle-ActivationPolicy: lazy
Bundle-Localization: plugin
[if (aBundle.wizards->size() > 0 or aBundle.natures->size() > 0 or aBundle.builders->size() > 0 or aBundle.views->size() > 0 
or aBundle.editors->size() > 0 or aBundle.perspectives->size() > 0 or aBundle.views.handlers->size() > 0 or aBundle.commands->size() > 0 
or aBundle.editors.handlers->size() > 0 or aBundle.helpContents->size() > 0)]Bundle-Activator: [aBundle.genBundleID()/].Activator
[/if][if (aBundle.declarativeServices.providedServices->size() > 0 or aBundle.exportedPackages->size() > 0)]Export-Package:[if (aBundle.declarativeServices.providedServices->size() > 0 and aBundle.exportedPackages->size() > 0)][aBundle.bundleExportedPackages()/]
[else][aBundle.exportedPackage()/]
[/if][/if][if (aBundle.declarativeServices.requiredServices->size() > 0)]Import-Package: org.eclipse.osgi.framework.console;version="1.1.0",
[for (aRequiredService : RequiredService | aBundle.declarativeServices.requiredServices) separator(',' + aBundle.lineSeparator())] [aRequiredService.genImportPackageRequiredID()/][/for]
[/if]Require-Bundle: org.eclipse.emf.ecore;visibility:=reexport[if (aBundle.importedPackageDeclarations->size() > 0 or aBundle.wizards->size() > 0 
or aBundle.views->size() > 0 or aBundle.editors->size() > 0 or aBundle.perspectives->size() > 0 or aBundle.views.handlers->size() > 0
or aBundle.commands->size() > 0 or aBundle.editors.handlers->size() > 0 or aBundle.helpContents->size() > 0)],
[importDeclaration()/][else]
[/if]
[if (aBundle.declarativeServices->size() > 0)]
Service-Component: OSGI-INF/*.xml[/if]

[/file]
[/template]

[template private bundleExportedPackages(aBundle : Bundle)]
[for (aGenPackage : GenPackage | aBundle.exportedPackages) separator (',' + aBundle.lineSeparator())]
 [if(aGenPackage.ancestors(GenPackage)->size() > 0)][aGenPackage.basePackage/].[/if][aGenPackage.classPackageSuffix/],
[for (aProvidedService : ProvidedService | aBundle.declarativeServices.providedServices) separator (',' + aBundle.lineSeparator())]
 [aProvidedService.interface.genPackage.basePackage/].[aProvidedService.interface.genPackage.ecorePackage.name/][/for][/for]
[/template]

[template private exportedPackage(aBundle : Bundle)]
[if (aBundle.declarativeServices.providedServices->size() > 0 or aBundle.exportedPackages->size() > 0)][aBundle.allExportedPackage()/][/if]
[/template]

[template private allExportedPackage(aBundle : Bundle)]
[if (aBundle.exportedPackages->size() > 0)][for (aGenPackage : GenPackage | aBundle.exportedPackages) separator (',' + aBundle.lineSeparator())]
 [if(aGenPackage.ancestors(GenPackage)->size() > 0)][aGenPackage.basePackage/].[/if][aGenPackage.ecorePackage.name/][/for][/if][if (aBundle.declarativeServices.providedServices->size() > 0)][for (aProvidedService : ProvidedService | aBundle.declarativeServices.providedServices) separator (',' + aBundle.lineSeparator())]
 [aProvidedService.interface.genPackage.basePackage/].[aProvidedService.interface.genPackage.ecorePackage.name/][/for][/if]
[/template]

[template private exportPackage(aBundle : Bundle)]
[for (aBundle) separator(',')]
[if (aBundle.exportedPackages->size() > 0)][for (aBundle : Bundle | aBundle) separator(',')][aBundle.bundleExportedPackages()/][/for][/if][if (aBundle.declarativeServices.providedServices->size() > 0)][for (aProvidedService : ProvidedService | aBundle.declarativeServices.providedServices) separator(',')][aProvidedService.genInterfaceProvidedID()/][/for][/if][/for]
[/template]

[template private importDeclaration(aBundle : Bundle)]
[if (aBundle.wizards->size() > 0 or aBundle.views->size() > 0 or aBundle.editors->size() > 0 
or aBundle.perspectives->size() > 0 or aBundle.views.handlers->size() > 0
or aBundle.commands->size() > 0 or aBundle.editors.handlers->size() > 0 or aBundle.helpContents->size() > 0)][importRequired()/]
[/if][for (anImportedpackage : ImportedPackageDeclaration | aBundle.importedPackageDeclarations) separator(',' + aBundle.lineSeparator())]
 [anImportedpackage.genImportedPackageName()/]
[/for]
[/template]

[template private importRequired(aBundle : Bundle)]
 org.eclipse.ui;bundle-version="3.7.0",
 org.eclipse.core.runtime;bundle-version="3.7.0"[if (aBundle.eAllContents(Wizard)->size() > 0)],
 org.eclipse.jface;bundle-version="3.7.0",
 org.eclipse.core.resources;bundle-version="3.7.101",
 org.eclipse.ui.ide;bundle-version="3.7.0"[else]
[/if][if (aBundle.eAllContents(Editor)->size() > 0)],
 org.eclipse.jface.text,
 org.eclipse.ui.editors[else]
[/if][if (aBundle.eAllContents(Perspective)->size() > 0)],
 org.eclipse.ui.console,
 org.eclipse.jdt.ui
[/if][if (aBundle.importedPackageDeclarations.packageName->size() > 0)],[/if]
[/template]
