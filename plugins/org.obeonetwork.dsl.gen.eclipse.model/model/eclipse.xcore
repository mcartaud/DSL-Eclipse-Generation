@Ecore(nsURI="http://www.obeonetwork.org/dsl/eclipse", nsPrefix="eclipse")
@GenModel(editDirectory="/org.obeonetwork.dsl.gen.eclipse.model.edit/src-gen")
@GenModel(editorDirectory="/org.obeonetwork.dsl.gen.eclipse.model.editor/src-gen")
package org.obeonetwork.dsl.gen.eclipse

import org.eclipse.emf.ecore.EClass
import org.eclipse.emf.ecore.EPackage
import org.eclipse.emf.ecore.EReference

class Application {
	String name
	String applicationID
	String provider
	String copyright
	String version
	String description
	boolean mavenCompilation
	contains Project[] projects
}

abstract class Project {
	String name
	String basePackage
}

class Repository extends Project {
	String categoryLabel
	String categoryID
	String categoryDescription
	refers Feature[] features
}

class Feature extends Project {
	String copyright
	String description
	String version
	String license
	String featureProvider
	refers Bundle[] bundles
}

class Bundle extends Project {
	String version
	String requiredEnvironment
	String vendor
	contains ProvidedService[] providedServices
	contains RequiredService[] requiredServices
	contains ImportedPackageDeclaration[] importedPackageDeclarations
	contains Nature[] natures
	contains Builder[] builders
	contains Wizard[] wizards
	contains ExtensionPoint[] extensionPoints
	contains Decorator[] decorators
	contains Marker[] markers
	contains Perspective[] perspectives
	contains Editor[] editors
	contains View[] views
	contains HelpContents[] helpContents
	contains Command[] commands
	contains Menu[] menus
	contains Action[] actions
	contains Context[] contexts
	contains Category[] categories
	contains Binding[] bindings
	refers EPackage[] exportedPackages
	refers EPackage[] ownedPackages
 	refers derived EPackage[] allExportedPackages
}

class ImportedPackageDeclaration {
	String packageName
	String packageVersion
}

class ProvidedService {
	String name
	refers EClass implementation
	refers EClass ^interface
	refers RequiredService[] requiredServices
}

class RequiredService {
	String name
	Integer lowerBound
	Integer upperBound
	refers EClass ^interface
	refers EClass implementation
	refers EReference bindedReference
}

class Builder {
	String name
	refers Nature[] natures opposite builders
}

class Nature {
	String name
	String langageName
	boolean hasToogleNature
	refers Builder[] builders opposite natures
}

class Wizard {
	String name
	String title
	String description
	String icon
	boolean isProject
	refers Category category opposite wizards
}

class ProjectWizard extends Wizard {
	refers Nature[] natures
}

class ExtensionPoint {
	String name
	boolean required
	contains Attribute[] attributes
}

class Attribute {
	String name
	boolean required
	boolean translatable
	Type ^type
}

class Decorator {
	String label
	String icon
	String name
	boolean isLightweight
	boolean isAdaptable
	Location location
}

class Marker {
	String name
	boolean isPersistant
}

class Context {
	String name
	contains Context[] contexts
	refers Perspective perspective opposite context
	refers Command[] commands opposite context
}

class Perspective {
	String name
	String icon
	contains Action[] actions
	contains Menu[] menus
	contains Wizard[] wizards
	refers Context context opposite perspective
	refers View[] views opposite perspectives
}

class Category {
	String name
	refers Command[] commands opposite category
	refers View[] views opposite category
	refers Wizard[] wizards opposite category
}

abstract class Part {
	String name
	String icon
	contains DynamicHelp dynamicHelp
}

class View extends Part {
	boolean isTree
	boolean isVisible
	contains Action[] actions
	contains Menu[] menus
	refers Perspective[] perspectives opposite views
	refers Category category opposite views
}

class Editor extends Part {
	String extension
	boolean dynamicMenu
	contains Action[] actions
	contains Menu[] menus
}

class Menu {
	String name
	String mnemonic
	boolean menuContribution
	boolean toolbarContribution
	refers Command[] commands opposite menu
}

class Command {
	String name
	String icon
	String tooltip
	refers Action action opposite command
	refers Menu menu opposite commands
	refers Category category opposite commands
	refers Binding binding opposite command
	refers Context context opposite commands
}

class Action {
	String name
	String mnemonic
	refers Command command opposite action
}

class HelpContents {
	String description
	String label
	String title
	contains HelpPage[] helpPages
}

class HelpPage {
	String description
	String label
	String title
	contains HelpPage[] helpPages
}

class DynamicHelp {
	String description
	String label
	String title
	refers HelpPage[] helpPages
}

class Binding {
	String keySequence
	refers Command command opposite binding
}

enum Type {
	string
	^boolean
	java
	resource
	identifier
}

enum Location {
	BottomRight
	BottomLeft
	TopRight
	TopLeft
	Underlay
	Blank
}