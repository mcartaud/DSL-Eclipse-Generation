@Ecore(nsURI="http://www.obeonetwork.org/dsl/eclipse", nsPrefix="eclipse")
@GenModel(editDirectory="/org.obeonetwork.dsl.gen.eclipse.model.edit/src-gen")
@GenModel(editorDirectory="/org.obeonetwork.dsl.gen.eclipse.model.editor/src-gen")
package org.obeonetwork.dsl.gen.eclipse

import org.eclipse.emf.ecore.EClass
import org.eclipse.emf.ecore.EPackage
import org.eclipse.emf.ecore.EReference

class Application {
	String name
	String applicationID
	String provider
	String copyright
	String version
	String description
	contains Project[] projects
}

abstract class Project {
	String projectID
	String projectName
}

class Repository extends Project {
	String categoryName
	String categoryLabel
	String categoryDescription
	refers Feature[] features
	refers Bundle[] bundles
}

class Feature extends Project {
	String copyright
	String description
	String version
	String license
	String featureProvider
	refers Bundle[] bundles
}

class Bundle extends Project {
	String version
	String requiredEnvironment
	String vendor
	String basePackage
	contains ProvidedService[] providedServices
	contains RequiredService[] requiredServices
	contains PartCategory[] partCategories
	contains Perspective[] perspectives
	contains Help[] helps
	contains ImportedPackageDeclaration[] importedPackageDeclarations
	refers EPackage[] exportedPackages
	refers EPackage[] ownedPackages
 	refers derived EPackage[] allExportedPackages
}


class ImportedPackageDeclaration {
	String packageName
	String packageVersion
}

class ActionSet {
	String name
	String ID
	contains Menu[] menus
	contains Action[] actions
}

class Menu {
	String name
	contains Binding binding
	contains Menu[] menus
	contains Action[] actions
}

class Action {
	String name
	contains Binding binding
}

class PartCategory {
	String name
	String partCategoryID
	contains Part[] parts
}

abstract class Part {
	String partID
	String name
	String description
	contains ActionSet[] actionSets
	contains ContextualHelp contextualHelp
}

class View extends Part {
	String viewID
	contains Action[] actions
	contains Menu[] menus
	refers Perspective[] perspectives opposite views
}

class Editor extends Part {
	String editorID
	String language
}

class Perspective {
	String name
	String perspectiveID
	contains ActionSet[] actionSets
	refers View[] views opposite perspectives
}

class Binding {
	String name
	String key
}

class Help {
	String name
	String helpID
	contains Page[] pages
}

class Page {
	String name
	String pageID
}

class ContextualHelp {
	String contextualHelpID
	contains Page page
}

class ProvidedService {
	String name
	String serviceID
	refers EClass implementation
	refers EClass ^interface
	refers RequiredService[] requiredServices
}

class RequiredService {
	String name
	String serviceID
	Integer lowerBound
	Integer upperBound
	refers EClass ^interface
	refers EClass implementation
	refers EReference bindedReference
}
